-- Remover gun by Garry, edited by ClavusElite, edited by Deluvas for ZS
AddCSLuaFile()

-- General info
SWEP.PrintName = "Exploit Blocker Tool"
SWEP.DrawAmmo = false
SWEP.DrawCrosshair = true
SWEP.ViewModelFOV = 70
SWEP.ViewModelFlip = false
SWEP.CSMuzzleFlashes = false
SWEP.Author	= "ClavusElite"
SWEP.Slot = 4
SWEP.SlotPos = 4
SWEP.Contact = "None"
SWEP.Purpose = "None"
SWEP.Instructions = "None"

-- View and world models
SWEP.ViewModel = "models/weapons/v_toolgun.mdl"
SWEP.WorldModel	= "models/weapons/w_toolgun.mdl"

SWEP.Spawnable = false
SWEP.AdminSpawnable	= true

SWEP.Primary.Recoil	= 2
SWEP.Primary.Unrecoil = 7
SWEP.Primary.ClipSize = -1
SWEP.Primary.Damage = 0
SWEP.Primary.DefaultClip = -1
SWEP.Primary.Automatic = false
SWEP.Primary.Ammo = "none"
SWEP.Primary.Delay = 0.5
SWEP.Primary.Cone = 0
SWEP.ConeMoving	= 0
SWEP.ConeCrouching = 0

SWEP.Secondary.ClipSize = -1
SWEP.Secondary.DefaultClip = -1
SWEP.Secondary.Automatic = true
SWEP.Secondary.Ammo	= "none"
SWEP.Secondary.Delay = 0.3

SWEP.HoldType = "pistol"
SWEP.Primary.Sound = Sound( "buttons/button9.wav" )

SWEP.Modes = { 
	[1] = { "Default" }, -- block's position is always near you
	[2] = { "Trace HitPos" }, -- block's position will be placed where you are looking
}

if SERVER then
	function SWEP:UpdateClient()
		for k,v in ipairs ( MapExploits ) do
			umsg.Start( "umsg_exploit_update", self.Owner )
				umsg.Bool( ( k == 1 ) )
				umsg.Short( k )
				umsg.Vector( v.origin )
				umsg.Short( v.bsize )
			umsg.End()
		end
	end
end

if CLIENT then
	usermessage.Hook( "umsg_exploit_update", function( msg )
		local First = msg:ReadBool()
		if ( First ) then
			MapExploits = {}
		end
		
		local Index = msg:ReadShort()
		local Pos = msg:ReadVector()
		local Size = msg:ReadShort()
		
		MapExploits[Index] = { origin = Pos, bsize = Size }
	end )
end

function SWEP:Initialize()

end

function SWEP:PrimaryAttack()
	self:SetNextPrimaryFire( CurTime() + self.Primary.Delay )

	local pos = self.Owner:GetAimVector()
	if SERVER then
		table.insert( MapExploits, { origin = self.Origin, bsize = self:GetDTInt( 0 ) or 0 } )
		self:UpdateClient()
	end
	
	if SERVER then
		self.Owner:ChatPrint( "[TOOL] Placed block at: "..tostring( self.Origin ).." with size: "..self:GetDTInt( 0 ) or 0 )
	end
	
	self:EmitSound( self.Primary.Sound )
	
	self.Owner:SetAnimation( PLAYER_ATTACK1 )
	self:SendWeaponAnim( ACT_VM_PRIMARYATTACK )
end

function SWEP:SecondaryAttack()
	return false
end
SWEP.SwitchTimer = 0
SWEP.SizeTimer = 0
function SWEP:Think()
local Mode = self:GetNetworkedInt ( "Mode" )

	if Mode == 1 then
	self.Origin = self.Owner:GetShootPos() + self.Owner:GetAimVector() * 84
	elseif Mode == 2 then
	self.Origin = self.owner:GetEyeTrace().HitPos + Vector(0,0,self:GetDTInt( 0 )-10) -- lets make it simple to use :3
	end
	if SERVER then
		if self.SizeTimer < CurTime() then
			if self.Owner:KeyDown( IN_ATTACK2 ) then
				self:SetDTInt( 0, ( self:GetDTInt( 0 ) or 0 ) + 1 )
			elseif self.Owner:KeyDown( IN_USE ) then
				self:SetDTInt( 0, ( self:GetDTInt( 0 ) or 0 ) - 1 )
			end
		end
		
		if SERVER then
			if self.Owner:KeyPressed( IN_ZOOM ) then
				MapExploitWrite()
			self.Owner:ChatPrint( "[TOOL] Saved blocks in: 'data/zombiesurvival/exploits/"..game.GetMap()..".txt'" )	
			end	
		end
	end
	if SERVER then
		if self.Owner:KeyPressed (IN_SCORE) then
			if self.SwitchTimer > CurTime() then return end
		
				if Mode <= 2 then
					Mode = Mode + 1
				end
				
				if Mode > 2 then
					Mode = 1
				end
			self:SetNetworkedInt ( "Mode", Mode )
			self.SwitchTimer = CurTime() + 0.3
		end
	end
end

SWEP.TimerReload = 0
function SWEP:Reload()
	if CurTime() < self.TimerReload then return end
	
	if #MapExploits <= 0 then 
		self.Owner:ChatPrint( "-- You haven't placed any blocks yet! --" )
		self.TimerReload = CurTime() + 0.5
		
		return 
	end
	
	local count = 0
	local tokeep = {}
	for k, v in pairs( MapExploits ) do
		if v.origin:Distance( self.Owner:GetPos() + self.Owner:GetAimVector() * 84 ) < 128 then
			count = count + 1
		else
			table.insert( tokeep,v )
		end
	end
	
	MapExploits = tokeep
	
	if CLIENT then
		if count == 0 then
			self.Owner:ChatPrint( "-- No blocks nearby! --" )
		else
			self.Owner:ChatPrint( "-- Deleted "..count.." nearby block(s) --" )
		end
	end
	
	self.TimerReload = CurTime() + 0.5	
end

function SWEP:Holster( wep )
	return true
end 

--[==[-------------------------------------------------------------------------
	Called when you make it active 
--------------------------------------------------------------------------]==]
function SWEP:Deploy()
	self:SetDTInt( 0, 32 )
	self:SetNetworkedInt ( "Mode", 1 )
	self.Origin = self.Owner:GetShootPos() + self.Owner:GetAimVector() * 84
	
	-- Initialize exploits table if not
	MapExploits = MapExploits or {}
	self:SendWeaponAnim( ACT_VM_DRAW )

	if SERVER then 
		self:UpdateClient()
	end
	
	return true
end 

--[==[-------------------------------------------------------------------------
	Called when you equip it
--------------------------------------------------------------------------]==]
function SWEP:Equip ( NewOwner )
	if SERVER then
		local EntClass = self:GetClass()
		local PrintName = self.PrintName or "weapon"
		if NewOwner:IsPlayer() then
			if NewOwner:Team() == TEAM_HUMAN then
				local category = WeaponTypeToCategory[ self:GetType() ]
				NewOwner.CurrentWeapons[ category ] = NewOwner.CurrentWeapons[ category ] + 1
				WeaponPickupNotify ( NewOwner, PrintName )				
			end
		end
	end
end

if CLIENT then

function SWEP:DrawHUD()
	if not self.Owner:Alive() then return end
	if ENDROUND then return end
	local points = {}
	local screen = nil

	local blocklist = table.Copy( MapExploits )
	table.insert( blocklist, { origin = self.Origin, bsize = self:GetDTInt( 0 ) or 0, current = true } )

	for k, v in pairs(blocklist) do
		screen = v.origin:ToScreen()
		points = {}
		-- if screen.x > 0 and screen.x < w and screen.y > 0 and screen.y < h then
			table.insert(points, (v.origin+Vector(v.bsize,v.bsize,v.bsize)):ToScreen())
			table.insert(points, (v.origin+Vector(-v.bsize,v.bsize,v.bsize)):ToScreen())
			table.insert(points, (v.origin+Vector(-v.bsize,-v.bsize,v.bsize)):ToScreen())
			table.insert(points, (v.origin+Vector(v.bsize,-v.bsize,v.bsize)):ToScreen())
			table.insert(points, (v.origin+Vector(v.bsize,v.bsize,-v.bsize)):ToScreen())
			table.insert(points, (v.origin+Vector(-v.bsize,v.bsize,-v.bsize)):ToScreen())
			table.insert(points, (v.origin+Vector(-v.bsize,-v.bsize,-v.bsize)):ToScreen())
			table.insert(points, (v.origin+Vector(v.bsize,-v.bsize,-v.bsize)):ToScreen())

			draw.SimpleText( "- Block "..k.." | Size: "..v.bsize, "default", screen.x, screen.y, Color(255,0,0), TEXT_ALIGN_CENTER, TEXT_ALIGN_CENTER )

			if not v.current then 
				surface.SetDrawColor(Color(255,0,0))
			else
				surface.SetDrawColor( Color( 0,255,0 ) )
			end
			
			for k, v in pairs( points ) do
			
				--draws a block
				if k % 4 == 0 then
					surface.DrawLine(v.x,v.y,points[k-3].x,points[k-3].y)
				else
					surface.DrawLine(v.x,v.y,points[k+1].x,points[k+1].y)
				end
				
				if k <= 4 then
					surface.DrawLine(v.x,v.y,points[k+4].x,points[k+4].y)
				end
			end
		-- end		
	end
	local Mode = self:GetNetworkedInt ( "Mode" )
	local Description1 = "Left mouse to place, Tab to change mode. Current mode: "..self.Modes[Mode][1]..""
	local Description2 = "USE to shrink, RMB to grow"
	local Description3 = "R to delete nearby boxes. ZOOM to save."

	surface.SetFont ( "ArialNine" )
	local DescWide1 = surface.GetTextSize ( Description1 )
	local DescWide2 = surface.GetTextSize ( Description2 )
	local DescWide3 = surface.GetTextSize ( Description3 )

	local BoxWide = math.max ( DescWide1, DescWide2, DescWide3 ) + ScaleW(50)

	draw.RoundedBox ( 8, ScaleW(673) - BoxWide * 0.5, ScaleH(761) - ScaleH(117) * 0.5, BoxWide, ScaleH(117), Color ( 1,1,1,180 ) )
	draw.SimpleText ( Description1,"ArialNine",ScaleW(673),ScaleH(726), Color ( 240,240,240,255 ), TEXT_ALIGN_CENTER, TEXT_ALIGN_CENTER )
	draw.SimpleText ( Description2 ,"ArialNine",ScaleW(673),ScaleH(756), Color ( 240,240,240,255 ), TEXT_ALIGN_CENTER, TEXT_ALIGN_CENTER )
	draw.SimpleText ( Description3 ,"ArialNine",ScaleW(673),ScaleH(788), Color ( 240,240,240,255 ), TEXT_ALIGN_CENTER, TEXT_ALIGN_CENTER )
end

end
